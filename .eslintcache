[{"C:\\Users\\DELL\\Desktop\\JScript\\folder\\fundoonotes\\fundoonotes\\src\\Components\\ResetPassword\\ResetPassword.jsx":"1","C:\\Users\\DELL\\Desktop\\JScript\\folder\\fundoonotes\\fundoonotes\\src\\index.js":"2","C:\\Users\\DELL\\Desktop\\JScript\\folder\\fundoonotes\\fundoonotes\\src\\App.js":"3","C:\\Users\\DELL\\Desktop\\JScript\\folder\\fundoonotes\\fundoonotes\\src\\reportWebVitals.js":"4","C:\\Users\\DELL\\Desktop\\JScript\\folder\\fundoonotes\\fundoonotes\\src\\Components\\Registration\\Registration.jsx":"5","C:\\Users\\DELL\\Desktop\\JScript\\folder\\fundoonotes\\fundoonotes\\src\\Components\\Login\\Signin.jsx":"6","C:\\Users\\DELL\\Desktop\\JScript\\folder\\fundoonotes\\fundoonotes\\src\\Components\\ForgotPassword\\ForgotPassword.jsx":"7","C:\\Users\\DELL\\Desktop\\JScript\\folder\\fundoonotes\\fundoonotes\\src\\Services\\userService.js":"8","C:\\Users\\DELL\\Desktop\\JScript\\folder\\fundoonotes\\fundoonotes\\src\\Services\\axiosService.js":"9","C:\\Users\\DELL\\Desktop\\JScript\\folder\\fundoonotes\\fundoonotes\\src\\Components\\Dashboard\\Dashboard.jsx":"10","C:\\Users\\DELL\\Desktop\\JScript\\folder\\fundoonotes\\fundoonotes\\src\\Components\\Dashboard\\AddNotes.jsx":"11","C:\\Users\\DELL\\Desktop\\JScript\\folder\\fundoonotes\\fundoonotes\\src\\Components\\Dashboard\\Note.jsx":"12"},{"size":4118,"mtime":1609846157217,"results":"13","hashOfConfig":"14"},{"size":500,"mtime":1609125713595,"results":"15","hashOfConfig":"14"},{"size":982,"mtime":1609903934249,"results":"16","hashOfConfig":"14"},{"size":362,"mtime":1608618380667,"results":"17","hashOfConfig":"14"},{"size":6263,"mtime":1609896149095,"results":"18","hashOfConfig":"14"},{"size":3356,"mtime":1609911803536,"results":"19","hashOfConfig":"14"},{"size":2580,"mtime":1609887069196,"results":"20","hashOfConfig":"14"},{"size":709,"mtime":1609849322627,"results":"21","hashOfConfig":"14"},{"size":212,"mtime":1609849180089,"results":"22","hashOfConfig":"14"},{"size":9933,"mtime":1610186276757,"results":"23","hashOfConfig":"14"},{"size":3557,"mtime":1610175514710,"results":"24","hashOfConfig":"14"},{"size":2577,"mtime":1610190597025,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"29"},"dke3rn",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"29"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},"C:\\Users\\DELL\\Desktop\\JScript\\folder\\fundoonotes\\fundoonotes\\src\\Components\\ResetPassword\\ResetPassword.jsx",["63"],"import React from \"react\";\r\n//import \"./App.css\";\r\nimport './ResetPassword.css';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { FormHelperText } from \"@material-ui/core\";\r\nimport UserService from '../../Services/userService.js'\r\n\r\nconst service = new UserService();\r\n\r\nconst passwordRegex = RegExp('^[A-Z][a-z]{2,}$');\r\n\r\nexport default class ResetPassword extends React.Component {\r\n    constructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\thidden: true,\r\n\t\t\tpassword: \"\",\r\n\t\t\tpasswordErrorFlag: false,\r\n\t\t\tpasswordMsg: '',\r\n\t\t\tconfirmpassword: \"\",\r\n\t\t\tconfirmpasswordErrorFlag:false,\r\n            confirmpasswordMsg:''\r\n        }\r\n\r\n\t}\r\n  changeHandler=(e)=>{\r\n\t\tthis.setState({\r\n\t\t\t[e.target.name]: e.target.value\r\n\t\t})\r\n\t}\r\n\tvalidate = () => {\r\n\r\n\t\tlet isValid = false\r\n        if (this.state.password.length===0) {\r\n            this.setState({\r\n                passwordErrorFlag: true,\r\n                passwordMsg: 'Password is required !',\r\n            })\r\n            isValid=true\r\n        }\r\n    \r\n    \r\n        if (this.state.password.length>0 && !passwordRegex.test(this.state.password)) {\r\n            this.setState({\r\n                passwordErrorFlag: true,\r\n                passwordMsg: 'Password is invalid !'\r\n                })\r\n            isValid=true\r\n    }\r\n    \r\n    if (this.state.confirmpassword.length===0) {\r\n            this.setState({\r\n            confirmpasswordErrorFlag: true,\r\n           confirmpasswordMsg: 'ConfirmPassword is required !'\r\n           })\r\n        isValid=true\r\n    }\r\n    \r\n    if (this.state.confirmpassword.length>0 && !passwordRegex.test(this.state.password)) {\r\n        this.setState({\r\n            confirmpasswordErrorFlag: true,\r\n            confirmpasswordMsg: 'ConfirmPassword is invalid !'\r\n            })\r\n        isValid=true\r\n    }\r\n    \r\n            return isValid;\r\n        }\r\n    \r\n        submit = (e) => {\r\n            console.log(\"Hello\");\r\n            e.preventDefault();\r\n            if (this.validate()){\r\n                console.log('reset password failed');\r\n            }\r\n            else{\r\n                console.log('reset password successful', this.state.password);\r\n            let userData = {\r\n                newPassword: this.state.password,\r\n            }\r\n            const token=this.props.match.params.token;\r\n            console.log(token);\r\n            service.resetpassword(userData,token).then((response)=>{\r\n                console.log(response)\r\n            }).catch(error=>{\r\n                console.log(error)\r\n            })\r\n            }\r\n        }\r\n        \r\n\trender() {\r\n\t\r\n        return  <div class=\"container4\">\r\n            <div class=\"left-containr4\">\r\n               <ul class=\"text-center\">\r\n                    <li>F</li>\r\n\t\t\t\t\t<li>u</li>\r\n\t\t\t\t\t<li>n</li>\r\n\t\t\t\t\t<li>d</li>\r\n\t\t\t\t\t<li>o</li>\r\n\t\t\t\t\t<li>o</li>\r\n            </ul>\r\n            <div className=\"title\">\r\n           <span>Find Your Email</span></div>\r\n            <div> <span>Enter your recovery email</span>\r\n           </div>\r\n           <div className=\"inputfield\">\r\n           <TextField className='mr' fullWidth size='small' error={this.state.passwordErrorFlag} helperText={this.state.passwordMsg} id=\"outline-full-width\" label=\"Password\" margin=\"normal\"name=\"password\" variant=\"outlined\" onChange={this.changeHandler} />\r\n          </div>\r\n          <div><TextField  size='small' fullWidth id=\"outline-full-width\" error={this.state.confirmpasswordErrorFlag} helperText={this.state.confirmpasswordMsg} label=\"Confirm\" margin=\"normal\" variant=\"outlined\" name=\"confirmpassword\" right=\"5%\" onChange={this.changeHandler} />\r\n</div>\r\n          <div className=\"bottom\">\r\n            <div className=\"flex-gap\">\r\n              <Button color=\"primary\">Forgot Password</Button>\r\n            </div>\r\n          </div>\r\n          <div className=\"resetbutton\">\r\n          <Button className=\"resetsubmit\" onClick={this.submit} variant=\"contained\" color=\"primary\" href=\"#contained-buttons\">\r\n          submit</Button>\t\t\t\t\r\n          </div>\r\n         </div>\r\n      </div>\r\n        \r\n  }\r\n}\r\n",["64","65"],"C:\\Users\\DELL\\Desktop\\JScript\\folder\\fundoonotes\\fundoonotes\\src\\index.js",[],"C:\\Users\\DELL\\Desktop\\JScript\\folder\\fundoonotes\\fundoonotes\\src\\App.js",["66"],"import React, { Component } from 'react';\nimport './App.css';\nimport Registration from './Components/Registration/Registration.jsx';\nimport Signin from  './Components/Login/Signin.jsx';\nimport Dashboard from  './Components/Dashboard/Dashboard.jsx';\nimport ForgotPassword from  './Components/ForgotPassword/ForgotPassword.jsx';\nimport ResetPassword from  './Components/ResetPassword/ResetPassword.jsx';\nimport { BrowserRouter ,Route, Switch} from 'react-router-dom';\n\nfunction App() {\n    return (\n       <div className=\"App\" >\n       <BrowserRouter>\n       <Switch>\n       <Route exact path=\"/Registration\" component={Registration}  />\n       <Route exact path=\"/Signin\" component={Signin} />\n      <Route exact path=\"/forgotpassword\" component={ForgotPassword} />\n      <Route exact path=\"/resetpassword\" component={ResetPassword} />\n      <Route exact path=\"/Dashboard\" component={Dashboard} />\n       </Switch>\n       </BrowserRouter>\n     </div>\n    );\n}\n\n\nexport default App;\n\n",["67","68"],"C:\\Users\\DELL\\Desktop\\JScript\\folder\\fundoonotes\\fundoonotes\\src\\reportWebVitals.js",[],["69","70"],"C:\\Users\\DELL\\Desktop\\JScript\\folder\\fundoonotes\\fundoonotes\\src\\Components\\Registration\\Registration.jsx",["71"],"import React from \"react\";\r\n//import \"./App.css\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport UserService from '../../Services/userService.js';\r\nimport './Registration.css';\r\n\r\n const service = new UserService();\r\n\r\nconst nameRegex = RegExp('^[A-Z][a-z]{2,}$');\r\n// const emailRegex = RegExp('^$[0-9a-zA-Z]+([._+-][0-9a-zA-Z])*@[0-9a-zA-Z]+.[a-zA-Z]{2,4}(.[a-zA-Z]{2})*$');\r\nconst passwordRegex = RegExp('^[A-Z][a-z]{2,}$');\r\nconst emailRegex = RegExp('^[A-Z][a-z]{2,}$');\r\n\r\n\r\n\r\nexport default class Registration extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\thidden: true,\r\n\t\t\tfirstname: \"\",\r\n\t\t\tfirstnameErrorFlag: false,\r\n\t\t\tfirstnameMsg: '',\r\n\t\t\tlastname: \"\",\r\n\t\t\tlastnameErrorFlag: false,\r\n\t\t\tlastnameMsg: '',\r\n\t\t\tEmail: \"\",\r\n\t\t\tEmailErrorFlag: false,\r\n            EmailMsg: '',\r\n\t\t\tpassword: \"\",\r\n\t\t\tpasswordErrorFlag: false,\r\n\t\t\tpasswordMsg: '',\r\n\t\t\tconfirmpassword: \"\",\r\n\t\t\tconfirmpasswordErrorFlag:false,\r\n\t\t\tconfirmpasswordMsg:'',\r\n       }\r\n\r\n\t}\r\n  changeHandler=(e)=>{\r\n\t\tthis.setState({\r\n\t\t\t[e.target.name]: e.target.value\r\n\t\t})\r\n\t}\r\n\tvalidate = () => {\r\n\r\n\t\tlet isValid = false\r\n\t\tif (this.state.firstname.length===0) {\r\n\t\t\tthis.setState({\r\n\t\t\t\tfirstnameErrorFlag: true,\r\n\t\t\t\tfirstnameMsg: 'First Name is required !'\r\n             \t\t\t})\r\n\t\t\tisValid=true\r\n\t\t}\r\n   if (this.state.firstname.length>0 && !nameRegex.test(this.state.firstname)) {\r\n\t\t\tthis.setState({\r\n\t\t\t\tfirstnameErrorFlag: true,\r\n\t\t\t\tfirstnameMsg: 'FirstName is invalid !'\r\n             \t\t})\r\n\t\t\tisValid=true\r\n  \t}\r\n\t\tif (this.state.lastname.length===0) {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\tlastnameErrorFlag: true,\r\n\t\t\t\tlastnameMsg: 'Last Name is required !'\r\n             \t\t})\r\n\t\t\tisValid=true\r\n\t\t}\r\n\tif (this.state.lastname.length>0 && !nameRegex.test(this.state.lastname)) {\r\n\t\t\tthis.setState({\r\n\t\t\t\tlastnameErrorFlag: true,\r\n\t\t\t\tlastnameMsg: 'lastName is invalid !'\r\n           })\r\n\t\t\tisValid=true\r\n\t\t}\r\n\t\tif (this.state.Email.length===0) {\r\n\t\t\tthis.setState({\r\n\t\t\tEmailErrorFlag: true,\r\n\t\t\tEmailMsg: 'Email is required !'\r\n\t\t\t\t \r\n\t\t  })\r\n\t\t  isValid=true\r\n\t\t}\r\n\t\tif (this.state.Email.length>0 && !emailRegex.test(this.state.Email)) {\r\n\t\t  this.setState({\r\n\t\t\tEmailErrorFlag: true,\r\n\t\t\tEmailMsg: 'Email is invalid !'\r\n\t\t\t})\r\n\t\t  isValid=true\r\n\t\t}\r\n\tif (this.state.password.length===0) {\r\n\t\tthis.setState({\r\n\t\t\tpasswordErrorFlag: true,\r\n\t\t\tpasswordMsg: 'Password is required !',\r\n\t\t})\r\n\t\tisValid=true\r\n\t}\r\n\r\n\r\n\tif (this.state.password.length>0 && !passwordRegex.test(this.state.password)) {\r\n\t\tthis.setState({\r\n\t\t\tpasswordErrorFlag: true,\r\n\t\t\tpasswordMsg: 'Password is invalid !'\r\n\t\t\t})\r\n\t\tisValid=true\r\n}\r\n\r\nif (this.state.confirmpassword.length===0) {\r\n\t\tthis.setState({\r\n\t\tconfirmpasswordErrorFlag: true,\r\n\t   confirmpasswordMsg: 'ConfirmPassword is required !'\r\n\t   })\r\n\tisValid=true\r\n}\r\n\r\nif (this.state.confirmpassword.length>0 && !passwordRegex.test(this.state.password)) {\r\n\tthis.setState({\r\n\t\tconfirmpasswordErrorFlag: true,\r\n\t\tconfirmpasswordMsg: 'ConfirmPassword is invalid !'\r\n\t\t})\r\n\tisValid=true\r\n}\r\n\r\n\t\treturn isValid;\r\n\t}\r\n\r\n\tsubmit = (e) => {\r\n\t\tconsole.log(\"Hello\");\r\n\t\te.preventDefault();\r\n\t\tif (this.validate()){\r\n\t\t\tconsole.log('login failed');\r\n\t\t}\r\n\t\telse{\r\n\t\t\tconsole.log('login successful', this.state.firstname, this.state.username, this.state.password);\r\n\t\tlet userData = {\r\n\t\t\tfirstName: this.state.firstname,\r\n\t\t\tlastName: this.state.lastname,\r\n\t\t\tservice: \"advance\",\r\n     \t\temail: this.state.username,\r\n            password: this.state.password,\r\n        \r\n\t\t}\r\n\t\t service.registration(userData).then(data => {\r\n\t\t\t console.log(data);\r\n\t\t }).catch(error => {\r\n\t\t\t console.log(error);\r\n\t\t })\r\n\t}\r\n\r\n\t\t}\r\n\t\t\r\n\trender() {\r\n\t     return <div class=\"container\" >\r\n          <div class=\"left-container\">\r\n\t\t<ul class=\"text-center\">\r\n\t\t\t\t\t<li>F</li>\r\n\t\t\t\t\t<li>u</li>\r\n\t\t\t\t\t<li>n</li>\r\n\t\t\t\t\t<li>d</li>\r\n\t\t\t\t\t<li>o</li>\r\n\t\t\t\t\t<li>o</li>\r\n       \t</ul>\r\n\t\t\t\t<span class=\"title\">Create your Fundoo Account</span>\r\n\t\t\t\t<div className=\"inputfield\">\r\n\t\t\t\t\t<TextField id=\"outlined-basic\" className='mr' size='small' error={this.state.firstnameErrorFlag} helperText={this.state.firstnameMsg} id=\"outline-full-width\" label=\"First Name\" name=\"firstname\" margin=\"normal\" variant=\"outlined\" onChange={this.changeHandler} />\r\n\t\t\t\t\t<TextField id=\"outlined-basic\" size='small' error={this.state.lastnameErrorFlag} helperText={this.state.lastnameMsg} label=\"Last Name\" margin=\"normal\" name=\"lastname\" variant=\"outlined\" onChange={this.changeHandler} />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"inputfield\">\r\n\t\t\t\t<TextField className=\"width\" id=\"outlined-full-width\" size='small' error={this.state.EmailErrorFlag} helperText={this.state.EmailMsg} label=\"Email\" name=\"Email\" margin=\"normal\" variant=\"outlined\" onChange={this.changeHandler} />\r\n\t\t\t    </div><br />\r\n\t\t\t\t<div class=\"line1\">You can use letters,numbers & periods </div>\r\n\t\t\t\t<div class=\"line4\">Use my current email address instead </div>\r\n\t\t\t\t<div className=\"inputfield\" >\r\n\t\t\t\t\t<TextField className='mr' size='small' error={this.state.passwordErrorFlag} helperText={this.state.passwordMsg} id=\"outline-full-width\" label=\"Password\" margin=\"normal\"name=\"password\" variant=\"outlined\" onChange={this.changeHandler} />\r\n\t\t\t\t\t<TextField  size='small' id=\"outline-full-width\" error={this.state.confirmpasswordErrorFlag} helperText={this.state.confirmpasswordMsg} label=\"Confirm\" margin=\"normal\" variant=\"outlined\" name=\"confirmpassword\" right=\"5%\" onChange={this.changeHandler} />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"inputfield\">\r\n\t\t\t\t\t<Checkbox onClick={this.toggleshow} color=\"primary\" />\r\n\t\t\t\t<div>\r\n\t\t\t\t<FormHelperText id> Show Password </FormHelperText>\r\n\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n              <div className=\"registrationbutton\">\r\n\t\t\t\t<Button>Sign in instead</Button>\r\n\t\t\t\t\t<Button className=\"Registrationsubmit\" onClick={this.submit} variant=\"contained\" color=\"primary\" href=\"#contained-buttons\">\r\n          submit</Button>\r\n\t\t  \r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t\r\n\t\t\t<div class=\"side-image\">\r\n\t\t\t\t<img src=\"/assets/account.svg\" alt=\"myPic\" width=\"244\" height=\"244\" />\r\n        \t</div>\r\n\t\t\t</div>\r\n\t}\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","C:\\Users\\DELL\\Desktop\\JScript\\folder\\fundoonotes\\fundoonotes\\src\\Components\\Login\\Signin.jsx",["72"],"import React from \"react\";\r\n//import \"./App.css\";\r\nimport './Signin.css';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Link } from \"react-router-dom\";\r\nimport UserService from '../../Services/userService.js';\r\n\r\n\r\nconst emailRegex = RegExp('^$[0-9a-zA-Z]+([._+-][0-9a-zA-Z])*@[0-9a-zA-Z]+.[a-zA-Z]{2,4}(.[a-zA-Z]{2})*$');\r\nconst passwordRegex = RegExp('^[A-Z][a-z]{2,}$');\r\n\r\nconst service = new UserService();\r\n\r\nexport default class Registration extends React.Component {\r\n  constructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\thidden: true,\r\n\t\t\tEmail: \"\",\r\n\t\t\tEmailErrorFlag: false,\r\n      EmailMsg: '',\r\n      password: \"\",\r\n\t\t\tpasswordErrorFlag: false,\r\n\t\t\tpasswordMsg: ''\r\n\r\n       }\r\n\r\n  }\r\n  \r\n  changeHandler=(e)=>{\r\n\t\tthis.setState({\r\n\t\t\t[e.target.name]: e.target.value\r\n\t\t})\r\n\t}\r\n\tvalidate = () => {\r\n\t\tlet isValid = false\r\n\t\tif (this.state.Email.length===0) {\r\n      this.setState({\r\n      EmailErrorFlag: true,\r\n      EmailMsg: 'Email is required !'\r\n           \r\n    })\r\n    isValid=true\r\n  }\r\n  if (this.state.Email.length>0 && !emailRegex.test(this.state.Email)) {\r\n    this.setState({\r\n      EmailErrorFlag: true,\r\n      EmailMsg: 'Email is invalid !'\r\n      })\r\n    isValid=true\r\n}\r\n\r\nif (this.state.password.length===0) {\r\n  this.setState({\r\n    passwordErrorFlag: true,\r\n    passwordMsg: 'Password is required !',\r\n  })\r\n  isValid=true\r\n}\r\n\r\n\r\nif (this.state.password.length>0 && !passwordRegex.test(this.state.password)) {\r\n  this.setState({\r\n    passwordErrorFlag: true,\r\n    passwordMsg: 'Password is invalid !'\r\n    })\r\n  isValid=true\r\n}\r\nreturn isValid;\r\n  }\r\n\r\n  submit = (e) => {\r\n\t\tconsole.log(\"Hello\");\r\n\t\te.preventDefault();\r\n\t\tif (this.validate()){\r\n\t\t\tconsole.log('login failed');\r\n\t\t}\r\n\t\telse{\r\n\t\t\tconsole.log('login successful');\r\n\t\tlet userData = {\r\n         email: this.state.username,\r\n         service: \"advance\",\r\n         password: this.state.password\r\n        \r\n    }\r\n    service.registration(userData).then(data => {\r\n      console.log(data);\r\n    }).catch(error => {\r\n      console.log(error);\r\n    })\r\n }\r\n\r\n  }\r\n\r\n\trender() {\r\n\t         return  <div class=\"container2\">\r\n               <ul class=\"text-center\">\r\n                <li>F</li>\r\n\t\t\t\t       \t<li>u</li>\r\n\t\t\t\t      \t<li>n</li>\r\n\t\t\t\t      \t<li>d</li>\r\n\t\t\t\t      \t<li>o</li>\r\n\t\t\t\t      \t<li>o</li>\r\n            </ul>\r\n           <span className=\"title\">Sign in</span>\r\n\t\t\t\t\t<TextField fullWidth id=\"outlined-full-width\" size='small' error={this.state.EmailErrorFlag} helperText={this.state.EmailMsg} label=\"Email\" name=\"Email\" margin=\"normal\" variant=\"outlined\" onChange={this.changeHandler} />\r\n\t\t\t\t\t<TextField fullWidth id=\"outlined-full-width\" size='small' error={this.state.passwordErrorFlag} helperText={this.state.passwordMsg} label=\"Password\" name=\"password\" margin=\"normal\" variant=\"outlined\" onChange={this.changeHandler} />\r\n          <div className=\"bottom\">\r\n            <div className=\"flex-gap\">\r\n              <Button color=\"primary\">Forgot Password</Button>\r\n            </div>\r\n          </div>\r\n          <div className=\"loginbutton\">\r\n\t\t\t\t\t<Button>Create account</Button>\r\n          <Button className=\"Submit\" onClick={this.submit} variant=\"contained\" color=\"primary\" href=\"#contained-buttons\">\r\n          submit</Button>\r\n\t\t\t\t </div>\r\n        </div>\r\n  }\r\n}\r\n",["73","74"],"C:\\Users\\DELL\\Desktop\\JScript\\folder\\fundoonotes\\fundoonotes\\src\\Components\\ForgotPassword\\ForgotPassword.jsx",["75","76"],"import React from \"react\";\r\n//import \"./App.css\";\r\nimport './ForgotPassword.css';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { FormHelperText } from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nconst emailRegex = RegExp('^$[0-9a-zA-Z]+([._+-][0-9a-zA-Z])*@[0-9a-zA-Z]+.[a-zA-Z]{2,4}(.[a-zA-Z]{2})*$');\r\n\r\nexport default class ForgotPassword extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\thidden: true,\r\n\t\t\tEmail: \"\",\r\n\t\t\tEmailErrorFlag: false,\r\n             EmailMsg: '',\r\n       }\r\n\r\n    }\r\n    \r\n    changeHandler=(e)=>{\r\n\t\tthis.setState({\r\n\t\t\t[e.target.name]: e.target.value\r\n\t\t})\r\n\t}\r\n\tvalidate = () => {\r\n\t\tlet isValid = false\r\n\t\tif (this.state.Email.length===0) {\r\n      this.setState({\r\n      EmailErrorFlag: true,\r\n      EmailMsg: 'Email is required !'\r\n           \r\n    })\r\n    isValid=true\r\n  }\r\n  if (this.state.Email.length>0 && !emailRegex.test(this.state.Email)) {\r\n    this.setState({\r\n      EmailErrorFlag: true,\r\n      EmailMsg: 'Email is invalid !'\r\n      })\r\n    isValid=true\r\n}\r\nreturn isValid;\r\n    }\r\n\r\n    submit = (e) => {\r\n\t\tconsole.log(\"Hello\");\r\n\t\te.preventDefault();\r\n\t\tif (this.validate()){\r\n\t\t\tconsole.log('login failed');\r\n\t\t}\r\n\t\telse{\r\n\t\t\tconsole.log('login successful');\r\n\t\tlet userData = {\r\n         email: this.state.username,\r\n         service: \"advance\",\r\n        \r\n\t\t}\r\n\t}\r\n    }\r\n\r\n\trender() {\r\n\t\r\n        return  <div class=\"container3\">\r\n               <ul class=\"text-center\">\r\n                <li>F</li>\r\n\t\t          \t<li>u</li>\r\n\t\t          \t<li>n</li>\r\n\t\t          \t<li>d</li>\r\n\t             \t<li>o</li>\r\n\t\t          \t<li>o</li>\r\n                 </ul>\r\n         <div className=\"title\">\r\n           <span>Find Your Email</span></div>\r\n            <div> <span>Enter your recovery email</span>\r\n           </div>\r\n\t\t\t\t\t<TextField  id=\"outlined-full-width\" fullWidth size='small' error={this.state.EmailErrorFlag} helperText={this.state.EmailMsg}   label=\"Email\" name=\"Email\" margin=\"normal\" variant=\"outlined\" onChange={this.changeHandler} />\r\n          <div className=\"bottom\">\r\n            <div className=\"flex-gap\">\r\n              <Button color=\"primary\">Forgot Password</Button>\r\n            </div>\r\n          </div>\r\n          <div className=\"forgotbutton\">\r\n          <Button className=\"forgotSubmit\" onClick={this.submit} component= {Link} to=\"/resetpassword\" variant=\"contained\" color=\"primary\" href=\"#contained-buttons\">\r\n          submit</Button>\r\n\t\t\t</div>\t\r\n         </div>       \r\n  }\r\n}\r\n\r\n\r\n",["77","78"],"C:\\Users\\DELL\\Desktop\\JScript\\folder\\fundoonotes\\fundoonotes\\src\\Services\\userService.js",[],"C:\\Users\\DELL\\Desktop\\JScript\\folder\\fundoonotes\\fundoonotes\\src\\Services\\axiosService.js",[],"C:\\Users\\DELL\\Desktop\\JScript\\folder\\fundoonotes\\fundoonotes\\src\\Components\\Dashboard\\Dashboard.jsx",["79","80","81","82","83","84","85","86","87","88","89"],"import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { fade, makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport NotificationsNoneRoundedIcon from '@material-ui/icons/NotificationsNoneRounded';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport ArchiveOutlinedIcon from '@material-ui/icons/ArchiveOutlined';\r\nimport DeleteOutlineOutlinedIcon from '@material-ui/icons/DeleteOutlineOutlined';\r\nimport EmojiObjectsOutlinedIcon from '@material-ui/icons/EmojiObjectsOutlined';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport keep from '../../Assets/keep.png';\r\nimport './Dashboard.css';\r\nimport AddNotes from './AddNotes.jsx';\r\n\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    position: 'relative',\r\n    zIndex: '0',\r\n    // height: '80px',\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    // backgroundColor: 'white',\r\n    // color: 'black',\r\n  },\r\n  // appBarShift: {\r\n  //   marginLeft: drawerWidth,\r\n  //   width: `calc(100% - ${drawerWidth}px)`,\r\n  //   transition: theme.transitions.create(['width', 'margin'], {\r\n  //     easing: theme.transitions.easing.sharp,\r\n  //     duration: theme.transitions.duration.enteringScreen,\r\n  //   }),\r\n  // },\r\n  // menuButton: {\r\n  //   marginRight: 36,\r\n  // },\r\n  // hide: {\r\n  //   display: 'none',\r\n  // },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n    whiteSpace: 'nowrap',\r\n    zIndex: '-1',\r\n    backgroundColor:'white',\r\n    color: '#5f6368',\r\n    height: '100vh'\r\n  },\r\n  drawerOpen: {\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n    border: 'none',\r\n  },\r\n  drawerClose: {\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    overflowX: 'hidden',\r\n    width: theme.spacing(7) + 1,\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9) + 1,\r\n    },\r\n    border: 'none',\r\n  },\r\n  toolbar: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  search:{\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white,0.15),\r\n    marginRight: theme.spacing(2),\r\n    marginLeft: 0,\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]:{\r\n      marginLeft: theme.spacing(3),\r\n      width: '52%'\r\n    },\r\n    [theme.breakpoints.down('xs')]: {\r\n      display: 'none'\r\n    },\r\n    height: '46px',\r\n    backgroundColor: '#f1f3f4',\r\n    border: '1px solid transparent',\r\n    borderRadius: '8px',\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    alignItems: 'center'\r\n  },\r\n  searchHide: {\r\n    display: 'none',\r\n    [theme.breakpoints.down('xs')]:{\r\n      marginLeft: theme.spacing(1),\r\n      display:'block'\r\n    },\r\n\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0,2),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center'\r\n  },\r\n   inputRoot:{\r\n     color: 'inherit',\r\n     font: 'normal 16px Google Sans,Roboto, RobotoDraft, Helvetica, Arial, sans-serif '\r\n   },\r\n   inputInput:{\r\n     padding: theme.spacing(1,1,1,0),\r\n     paddingLeft: `calc(1em+ ${theme.spacing(4)}px)`,\r\n     transition: theme.transitions.create('width'),\r\n     width:'100%',\r\n     [theme.breakpoints.up('md')]: {\r\n       width: '20ch',\r\n     },\r\n   },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n    backgroundColor: 'white',\r\n    minHeight: 'calc(100vh)',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n  },\r\n  icon: {\r\n    width: '40px',\r\n    height: '40px',\r\n    marginRight: '8px',\r\n  },\r\n  listItems: {\r\n    letterSpacing: '.01785714em',\r\n    fontFamily: 'Google Sans, Roboto, Arial, sans-serif',\r\n    fontSize: '.875rem',\r\n    fontWeight:'500',\r\n    lineHeight:'1.25rem',\r\n    paddingleft: '24px',\r\n    color: '#202124',\r\n    borderRadius: '0 25px 25px 0',\r\n  \r\n  '&:focus':{\r\n    backgroundColor: '#feefc3',\r\n    borderRadius: '0 25px 25px 0'\r\n  },\r\n},\r\n}));\r\n\r\n\r\nexport default function Dashboard() {\r\n\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [open, setOpen] = React.useState(false);\r\n  \r\n  const handlerDrawer = () => {\r\n    setOpen(!open);\r\n  };\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n\r\n<div className={classes.root}>\r\n       <CssBaseline />\r\n       <AppBar\r\n        position=\"fixed\"\r\n        className={classes.appBar}\r\n        style={{backgroundColor: \"white\", color: \"black\"}}\r\n      //     , {\r\n      //     [classes.appBarShift]: open,\r\n      //   })}\r\n      >\r\n        <Toolbar>\r\n          <div className={classes.toolBar}>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            // onClick={handleDrawer}\r\n            edge=\"start\"\r\n            // className={clsx(classes.menuButton, {\r\n            //   [classes.hide]: open,\r\n            // })}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          {/* <div className=\"logo\"> */}\r\n            <img  src={keep} alt=\"Logo\" width=\"70\" height=\"50\" />\r\n          {/* </div> */}\r\n          <Typography className={classes.title} variant=\"h6\" noWrap>\r\n            FundooNotes\r\n          </Typography>\r\n          <IconButton className={classes.searchHide}>\r\n            <SearchIcon />\r\n            </IconButton>\r\n          {/* <div className={classes.Search}>\r\n            <div className={classes.SearchIcon}>\r\n              <SearchIcon />\r\n            </div>\r\n            <InputBase \r\n            placeholder=\"Search..\"\r\n            classes={{\r\n              root: classes.inputRoot,\r\n              input:classes.inputInput,\r\n            }}\r\n            inputProps={{ 'arial-label' : 'search'  }}\r\n            /> */}\r\n          {/* </div>\r\n          </div> */}\r\n          {/* <div>\r\n            <Avatar alt=\"Shubham Sonawane\" src=\"\" />\r\n          </div> */}\r\n          </div>\r\n        </Toolbar>\r\n          </AppBar>\r\n          <Drawer\r\n        variant=\"permanent\"\r\n        className={clsx(classes.drawer, {\r\n          [classes.drawerOpen]: open,\r\n          [classes.drawerClose]: !open,\r\n        })}\r\n        classes={{\r\n          paper: clsx({\r\n            [classes.drawerOpen]: open,\r\n            [classes.drawerClose]: !open,\r\n          }),\r\n        }}\r\n        onMouseEnter={handleDrawerOpen}\r\n        onMouseLeave={handleDrawerClose}\r\n      >\r\n        <div className={classes.toolbar}>\r\n          {/* <IconButton onClick={handleDrawerClose}>\r\n            {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\r\n          </IconButton> */}\r\n        </div>\r\n        {/* <Divider /> */}\r\n        <List>\r\n          <ListItem className={classes.ListItem} button>\r\n          <ListItemIcon><EmojiObjectsOutlinedIcon /></ListItemIcon>\r\n          <ListItemText primary=\"Notes\" />\r\n          </ListItem>\r\n          <ListItem className={classes.ListItem} button>\r\n            <ListItemIcon><NotificationsNoneRoundedIcon /></ListItemIcon>\r\n            <ListItemText primary=\"Reminders\" />\r\n          </ListItem>\r\n          <ListItem className={classes.ListItem} button>\r\n            <ListItemIcon><EditOutlinedIcon /></ListItemIcon>\r\n            <ListItemText primary=\"Edit Labels\" />\r\n          </ListItem>\r\n          <ListItem className={classes.ListItem} button>\r\n            <ListItemIcon><ArchiveOutlinedIcon /></ListItemIcon>\r\n            <ListItemText primary=\"Archive\" />\r\n          </ListItem>\r\n          <ListItem className={classes.ListItem} button>\r\n            <ListItemIcon><DeleteOutlineOutlinedIcon /></ListItemIcon>\r\n            <ListItemText primary=\"Trash\" />\r\n          </ListItem>\r\n          </List>\r\n          </Drawer>\r\n          {/* {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\r\n            <ListItem button key={text}>\r\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n              <ListItemText primary={text} /> */}\r\n      <main className={classes.content}>\r\n        <div className={classes.toolbar} />\r\n        {/* <Typography paragraph>\r\n        </Typography>\r\n        <Typography paragraph>\r\n        </Typography> */}\r\n        <AddNotes />\r\n      </main>  \r\n           </div>\r\n          \r\n                      );\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  \r\n","C:\\Users\\DELL\\Desktop\\JScript\\folder\\fundoonotes\\fundoonotes\\src\\Components\\Dashboard\\AddNotes.jsx",["90","91","92","93","94","95"],"import React from \"react\";\r\nimport { fade, makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport ImageOutlinedIcon from '@material-ui/icons/ImageOutlined';\r\nimport CheckBoxOutlinedIcon from '@material-ui/icons/CheckBoxOutlined';\r\nimport BrushOutlinedIcon from '@material-ui/icons/BrushOutlined';\r\nimport Button from '@material-ui/core/Button';\r\nimport { IconButton } from \"@material-ui/core\";\r\nimport Note from './Note.jsx';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    main: {\r\n        width: '600px' ,\r\n        height: '46px',\r\n        backgroundColor: '#fff',\r\n        border: '1px solid transparent',\r\n        borderColor: '#e0e0e0',\r\n        boxSizing: 'border-box',\r\n        borderRadius: '8px',\r\n        color: '#202124',\r\n        direction: 'ltr',\r\n        fontFamily: 'Roboto,arial,sans-serif',\r\n        fontSize: '15px',\r\n        boxShadow: '0 1px 2px 0 rgba(60,64,67,0.302), 0 2px 6px 2px rgba(60,64,67,0.149)',\r\n        marginTop: theme.spacing(9.2),\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: '12px 16px',\r\n        color: '#808688',\r\n        fontSize: '15px',\r\n        fontWeight: '400',\r\n        [theme.breakpoints.down('sm')]: {\r\n            width: '108%',\r\n            marginTop: theme.spacing(7),\r\n            marginLeft: theme.spacing(-2),\r\n        },\r\n\r\n    },\r\n    text: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        flexGrow: '1',\r\n        height: '40px',\r\n        overflow: 'hidden',\r\n    },\r\n    main2: {\r\n        width: '600px',\r\n        height: '136px',\r\n        backgroundColor: '#fff',\r\n        border: '1px solid transparent',\r\n        borderColor: '#e0e0e0',\r\n        boxSizing: 'border-box',\r\n        borderRadius: '8px',\r\n        color: '#202124',\r\n        direction:'ltr',\r\n        fontFamily: 'Roboto, arial, sans-serif',\r\n        fontSize: '15px',\r\n        boxShadow: '0 1px 2px 0 rgba(60,64,67,0.302),0 2px 6px 2px rgba(60, 64,67, 0.149)',\r\n        marginTop: theme.spacing(10),\r\n        display:'flex',\r\n       padding: '12px 16px',\r\n       color: '#808688',\r\n       fontSize: '15px',\r\n       fontWeight: '400',\r\n       [theme.breakpoints.down('sm')]: {\r\n        width: 'auto',\r\n        marginTop: theme.spacing(7),\r\n        marginLeft: theme.spacing(-2),\r\n      },\r\n    }\r\n}))\r\n\r\n\r\nexport default function AddNotes() {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(true);\r\n\r\n    const handleNoteOpen = () => {\r\n        setOpen(false)\r\n    }\r\n\r\n    const handleNoteClose = () => {\r\n        setOpen(true)\r\n    }\r\n\r\n    return (\r\n          <div>\r\n             { open ? \r\n                 <div className={classes.main}> \r\n                     <div className={classes.text} onClick={handleNoteOpen}>Take a note..</div>\r\n                      <div>\r\n                         <IconButton>\r\n                             <CheckBoxOutlinedIcon />\r\n                         </IconButton>\r\n                         <IconButton>\r\n                             <BrushOutlinedIcon />\r\n                         </IconButton>\r\n                         <IconButton>\r\n                             <ImageOutlinedIcon />\r\n                         </IconButton>\r\n                     </div>\r\n        </div>\r\n        :\r\n        <div className={classes.main2}>\r\n        <div className={classes.text} onClick={handleNoteOpen}>Take a note</div>\r\n        <div>\r\n        <Note /> \r\n\r\n            <Button onClick={handleNoteClose}>Close</Button>\r\n\r\n        </div>\r\n        \r\n        </div>\r\n            }\r\n\r\n            </div>\r\n    )\r\n        }\r\n\r\n","C:\\Users\\DELL\\Desktop\\JScript\\folder\\fundoonotes\\fundoonotes\\src\\Components\\Dashboard\\Note.jsx",["96","97","98","99","100","101"],"import { colors, IconButton } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport AddAlertIcon from '@material-ui/icons/AddAlert';\r\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\r\nimport ColorLensIcon from '@material-ui/icons/ColorLens';\r\nimport ImageIcon from '@material-ui/icons/Image';\r\nimport SystemUpdateAltIcon from '@material-ui/icons/SystemUpdateAlt';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport { fade, makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Menu from '@material-ui/core/Menu';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        backgroundColor: '#fff',\r\n        border: '1px solid transparent',\r\n        borderColor: '#e0e0e0',\r\n        boxSizing: 'border-box',\r\n        borderRadius: '8px',\r\n        color: '#202124',\r\n\r\n    }\r\n})\r\n\r\n\r\nexport default function Note() {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(null);\r\n    const [clr, setClr] = React.useState(\"#ffff\");\r\n\r\n    const colors = [\r\n        \"#ffff\",\r\n        \"#ef9a9a\",\r\n        \"#ffcc80\",\r\n        \"#fff59d\",\r\n        \"#dcedc8\",\r\n        \"#b2dfdb\",\r\n        \"#e0f7fa\",\r\n        \"#4fc3f7\",\r\n        \"#b39ddb\",\r\n        \"#f8bbd0\",\r\n        \"#a1887f\",\r\n        \"#cfd8dc\",\r\n];\r\n    const colorsHandleClick = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const colorsHandleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const passColor = (color) => {\r\n        console.log(color);\r\n    };\r\n\r\nconst ColorBlock = () => {\r\n    return (\r\n    <div>\r\n        <Menu open={Boolean(open)} onClose={colorsHandleClose}>\r\n            <div className={classes.colorMenu}>\r\n                {colors.map((color) => (\r\n                    <div className={classes.colorDot}><IconButton className={classes.colorButton} onClick={setClr(color)} style={{ backgroundColor: color }} /></div>\r\n\r\n                ))}\r\n            </div>\r\n        </Menu>\r\n    </div>\r\n\r\n\r\n    );\r\n};\r\n\r\n   return (\r\n       <div className=\"optionButton\">\r\n           <IconButton>\r\n               <AddAlertIcon />\r\n           </IconButton>\r\n           <IconButton>\r\n               <PersonAddIcon />\r\n           </IconButton>\r\n           <IconButton onMouseOver={colorsHandleClick} >\r\n               <ColorLensIcon />\r\n           </IconButton>\r\n           <IconButton>\r\n               <ImageIcon />\r\n           </IconButton>\r\n           <IconButton>\r\n               <SystemUpdateAltIcon />\r\n           </IconButton>\r\n           <IconButton>\r\n               <MoreVertIcon />\r\n           </IconButton>\r\n           </div>\r\n   );\r\n\r\n   }\r\n\r\n\r\n",{"ruleId":"102","severity":1,"message":"103","line":6,"column":10,"nodeType":"104","messageId":"105","endLine":6,"endColumn":24},{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","replacedBy":"109"},{"ruleId":"102","severity":1,"message":"110","line":1,"column":17,"nodeType":"104","messageId":"105","endLine":1,"endColumn":26},{"ruleId":"106","replacedBy":"111"},{"ruleId":"108","replacedBy":"112"},{"ruleId":"106","replacedBy":"113"},{"ruleId":"108","replacedBy":"114"},{"ruleId":"115","severity":1,"message":"116","line":167,"column":140,"nodeType":"117","endLine":167,"endColumn":163},{"ruleId":"102","severity":1,"message":"118","line":6,"column":10,"nodeType":"104","messageId":"105","endLine":6,"endColumn":14},{"ruleId":"106","replacedBy":"119"},{"ruleId":"108","replacedBy":"120"},{"ruleId":"102","severity":1,"message":"103","line":6,"column":10,"nodeType":"104","messageId":"105","endLine":6,"endColumn":24},{"ruleId":"102","severity":1,"message":"121","line":57,"column":7,"nodeType":"104","messageId":"105","endLine":57,"endColumn":15},{"ruleId":"106","replacedBy":"122"},{"ruleId":"108","replacedBy":"123"},{"ruleId":"102","severity":1,"message":"124","line":10,"column":8,"nodeType":"104","messageId":"105","endLine":10,"endColumn":15},{"ruleId":"102","severity":1,"message":"125","line":13,"column":8,"nodeType":"104","messageId":"105","endLine":13,"endColumn":23},{"ruleId":"102","severity":1,"message":"126","line":14,"column":8,"nodeType":"104","messageId":"105","endLine":14,"endColumn":24},{"ruleId":"102","severity":1,"message":"127","line":23,"column":8,"nodeType":"104","messageId":"105","endLine":23,"endColumn":17},{"ruleId":"102","severity":1,"message":"128","line":25,"column":8,"nodeType":"104","messageId":"105","endLine":25,"endColumn":14},{"ruleId":"102","severity":1,"message":"129","line":26,"column":8,"nodeType":"104","messageId":"105","endLine":26,"endColumn":17},{"ruleId":"102","severity":1,"message":"130","line":27,"column":8,"nodeType":"104","messageId":"105","endLine":27,"endColumn":16},{"ruleId":"131","severity":1,"message":"132","line":117,"column":5,"nodeType":"133","messageId":"134","endLine":117,"endColumn":20},{"ruleId":"131","severity":1,"message":"135","line":119,"column":5,"nodeType":"133","messageId":"134","endLine":119,"endColumn":17},{"ruleId":"102","severity":1,"message":"136","line":188,"column":9,"nodeType":"104","messageId":"105","endLine":188,"endColumn":14},{"ruleId":"102","severity":1,"message":"137","line":191,"column":9,"nodeType":"104","messageId":"105","endLine":191,"endColumn":22},{"ruleId":"102","severity":1,"message":"138","line":2,"column":10,"nodeType":"104","messageId":"105","endLine":2,"endColumn":14},{"ruleId":"102","severity":1,"message":"139","line":2,"column":28,"nodeType":"104","messageId":"105","endLine":2,"endColumn":36},{"ruleId":"131","severity":1,"message":"140","line":28,"column":9,"nodeType":"133","messageId":"134","endLine":28,"endColumn":14},{"ruleId":"131","severity":1,"message":"141","line":29,"column":9,"nodeType":"133","messageId":"134","endLine":29,"endColumn":17},{"ruleId":"131","severity":1,"message":"140","line":61,"column":8,"nodeType":"133","messageId":"134","endLine":61,"endColumn":13},{"ruleId":"131","severity":1,"message":"141","line":62,"column":8,"nodeType":"133","messageId":"134","endLine":62,"endColumn":16},{"ruleId":"102","severity":1,"message":"142","line":1,"column":10,"nodeType":"104","messageId":"105","endLine":1,"endColumn":16},{"ruleId":"102","severity":1,"message":"138","line":9,"column":10,"nodeType":"104","messageId":"105","endLine":9,"endColumn":14},{"ruleId":"102","severity":1,"message":"139","line":9,"column":28,"nodeType":"104","messageId":"105","endLine":9,"endColumn":36},{"ruleId":"102","severity":1,"message":"143","line":28,"column":12,"nodeType":"104","messageId":"105","endLine":28,"endColumn":15},{"ruleId":"102","severity":1,"message":"144","line":52,"column":11,"nodeType":"104","messageId":"105","endLine":52,"endColumn":20},{"ruleId":"102","severity":1,"message":"145","line":56,"column":7,"nodeType":"104","messageId":"105","endLine":56,"endColumn":17},"no-unused-vars","'FormHelperText' is defined but never used.","Identifier","unusedVar","no-native-reassign",["146"],"no-negated-in-lhs",["147"],"'Component' is defined but never used.",["146"],["147"],["146"],["147"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'Link' is defined but never used.",["146"],["147"],"'userData' is assigned a value but never used.",["146"],["147"],"'Divider' is defined but never used.","'ChevronLeftIcon' is defined but never used.","'ChevronRightIcon' is defined but never used.","'InputBase' is defined but never used.","'Avatar' is defined but never used.","'InboxIcon' is defined but never used.","'MailIcon' is defined but never used.","no-dupe-keys","Duplicate key 'backgroundColor'.","ObjectExpression","unexpected","Duplicate key 'borderRadius'.","'theme' is assigned a value but never used.","'handlerDrawer' is assigned a value but never used.","'fade' is defined but never used.","'useTheme' is defined but never used.","Duplicate key 'color'.","Duplicate key 'fontSize'.","'colors' is defined but never used.","'clr' is assigned a value but never used.","'passColor' is assigned a value but never used.","'ColorBlock' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]